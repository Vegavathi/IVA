import cv2
import numpy as np

with open("coco.names", "r") as f:
    coco_names = [line.strip() for line in f.readlines()]
    
weightsPath="frozen_inference_graph.pb"
configPath="mask_rcnn_inception_v2_coco_2018_01_28.pbtxt"
net = cv2.dnn.readNetFromTensorflow(weightsPath, configPath)
image = cv2.imread(r"C:\Users\vegu2\Desktop\New folder (3)\pic3.jpg")
(H,W) = image.shape[:2]
blob = cv2.dnn.blobFromImage(image, swapRB=True, crop=False)
net.setInput(blob)
boxes = net.forward(["detection_out_final"])
output = boxes[0].squeeze()
output[: , 2][:5] , output[: , 1][:5]
output[: , 3:][:5]
num = np.argwhere(output[: , 2] > 0.8).shape[0]
font = cv2.FONT_HERSHEY_SIMPLEX
img = cv2.imread(r"C:\Users\vegu2\Desktop\New folder (3)\pic3.jpg")
for i in range(num):
  x1n , y1n , x2n , y2n = output[i , 3:]
  x1 = int(x1n * W)
  y1 = int(y1n * H)
  x2 = int(x2n * W)
  y2 = int(y2n * H)
  img = cv2.rectangle(img , (x1 , y1) , (x2 , y2) , (0 , 0 , 255) , 3)
  class_name = coco_names[int(output[i , 1])]
  img = cv2.putText(img , class_name , (x1 , y1 - 10) , font , 1 ,(0 , 255 , 0) , 1 , cv2.LINE_AA)
cv2.imshow("detected image",img)
cv2.waitKey(0)
cv2.destroyAllWindows()